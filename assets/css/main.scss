$cream: #fafaef;
$text-primary: #524f41;
$text-scramble: rgba(82, 79, 65, 0.69);

@font-face {
  font-family: Rodin;
  src: url(../fonts/Rodin_DB.otf);
}

body, html {
  font-family: 'Rodin', monospace;
  background: $cream;
  color: $text-primary;

  width: 100%;
  height: 100%;

  .hidden {
    display: none;
  }

  .container {
    width: 100%;
    height: 100%;
  }

  .footer {
    position: fixed;
    left: 0;
    bottom: 0;
    padding: 5px;
    width: 100%;
    text-transform: uppercase;
    font-size: 0.7em;

    .credits {
      padding-right: 10px;

      span {
        cursor: pointer;
        padding-left: 20px;
        letter-spacing: 1px;
      }
    }
  }

  .init-text {
    font-family: inherit;
    color: inherit;
    font-size: 1.1em;
    font-weight: bold;
    animation-duration: 2s;
  }
  .typed-cursor {
    animation-duration: 2s;
  }

  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    background-image: url('../images/pattern.png');
    opacity: 0.00;
    pointer-events: none;
    &.animated {
      animation-duration: 3s;
      animation-name: background-glitch;
      animation-fill-mode: forwards;
    }
  }

  .info-container {
    padding: 40px;
    font-size: 0.8em;
  }

  #particles {
    width: 120%;
    height: 120%;
    position: fixed;
    top: -10%;
    left: -10%;
  }

  #loading-progress {
    height: 2px;
    background: $text-primary;
    margin: 10px 0 10px 0;
    width: 0;
    transition: 2s linear;
  }
  .dud {
    color: $text-scramble;
  }

  .audio-bars {
    transform: scaleY(-1);
    height: 30px;
    cursor: pointer;
    .audio-bar {
      width: 2px;
      height: 1px;
      min-height: 1px;
      background-color: $text-primary;
      margin: 0 1px 0 1px;
      transition: 0.1s;
    }
  }
}

@keyframes background-glitch {
  0%   {opacity: random(100) / 100;}
  5%  {opacity: random(100) / 100;}
  10%  {opacity: random(100) / 100;}
  15%  {opacity: random(100) / 100;}
  20%  {opacity: random(100) / 100;}
  25%  {opacity: random(100) / 100;}
  30%  {opacity: random(100) / 100;}
  35%  {opacity: random(100) / 100;}
  40%  {opacity: random(100) / 100;}
  45%  {opacity: random(100) / 100;}
  50%  {opacity: random(100) / 100;}
  55%  {opacity: random(100) / 100;}
  60%  {opacity: random(100) / 100;}
  65%  {opacity: random(100) / 100;}
  70%  {opacity: random(100) / 100;}
  75%  {opacity: random(100) / 100;}
  80%  {opacity: random(100) / 100;}
  85%  {opacity: random(100) / 100;}
  90%  {opacity: random(100) / 100;}
  95%  {opacity: random(100) / 100;}
  100% {opacity: 0.02;}
}


